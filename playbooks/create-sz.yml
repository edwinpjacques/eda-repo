---
- name: Gather Apstra facts
  hosts: localhost
  gather_facts: false
  connection: local
  collections:
    - junipernetworks.apstra
    - ansible.eda
    - dynatrace.event_driven_ansible
    - kubealex.eda
    - kubealex.general
    - redhatinsights.eda
    - sabre1041.eda
  environment:
    APSTRA_API_URL: "https://10.87.2.40/api"
    APSTRA_USERNAME: "admin"
    APSTRA_PASSWORD: "Apstramarvis@123"
    APSTRA_VERIFY_CERTIFICATES: 0
  vars:
    namespace: "{{ ns }}"
    annotations: "{{ annotate }}"
  tasks:
    - name: Print vrf specific to the namespace
      debug:
        msg: "{{ annotations['k8s.v1.cni.cncf.io/vrf'][0] from_json | json_query('[].{label: label, vrf_name: vrf_name, sz_type: sz_type}') }}"

    - name: Connect to Apstra
      junipernetworks.apstra.authenticate:
        verify_certificates: false
        logout: false
      register: auth

    - name: Get blueprint
      junipernetworks.apstra.blueprint:
          body:
            label: "eda-bp"
          auth_token: "{{ auth.token }}"
      register: bp

    - name: Create security_zone
      junipernetworks.apstra.security_zone:
        id: "{{ bp.id }}"
        body:
          vrf_name: "eda-demo-sample"
          vni_id: 10000
          vrf_description: "Create VRF demo"
          sz_type: "evpn"
          label: "eda-demo-sample"
        auth_token: "{{ auth.token }}"
      register: sz

    - name: Create virtual_network
      junipernetworks.apstra.virtual_network:
        id: "{{ bp.id }}"
        body:
          label: "eda-demo-sample"
          description: "Create EDA VN sample"
          vn_type: "vxlan"
          security_zone_id: "{{ sz.id.security_zone }}"
        auth_token: "{{ auth.token }}"
      register: vn

    - name: Commit the blueprint
      junipernetworks.apstra.blueprint:
        id: "{{ bp.id }}"
        lock_state: "ignore"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_commit

    - name: Logout of Apstra
      junipernetworks.apstra.authenticate:
        logout: true
        auth_token: "{{ auth.token }}"
